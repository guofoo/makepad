#!/usr/bin/python3

import unicode
import sys
    
def print_table(name, code_points):
    entries = []
    for code_point in sorted(code_points):
        if entries and code_point == entries[-1][1] + 1:
            entries[-1][1] = code_point
            continue
        entries.append([code_point, code_point])

    print("pub(crate) static %s: [Range<char>; %d] = [" % (name, len(entries)))
    for entry in entries:
        print("    Range::new('\\u{%04X}', '\\u{%04X}')," % (entry[0], entry[1]))
    print("];")


def main():
    ucd_dir = sys.argv[1]

    categories = unicode.categories(ucd_dir)
    name_alias = unicode.aliases(ucd_dir)
    derived_properties = unicode.derived_properties(ucd_dir)
    contributory_properties = unicode.contributory_properties(ucd_dir)

    alnum = set()
    alnum.update(derived_properties["Alphabetic"])
    alnum.update(categories["Nd"])
    alnum = sorted(alnum)
    
    alpha = set()
    alpha.update(derived_properties["Alphabetic"])
    alpha = sorted(alpha)

    blank = set()
    blank.update(categories["Zs"])
    blank.update(name_alias["CHARACTER TABULATION"])
    blank = sorted(blank)

    cntrl = set()
    cntrl.update(categories["Cc"])
    cntrl = sorted(cntrl)

    digit = set()
    digit.update(categories["Nd"])
    digit = sorted(digit)

    graph = set()
    graph.update(range(0, 0xD800))
    graph.update(range(0xE000, 0x110000))
    graph.difference_update(contributory_properties["White_Space"])
    graph.difference_update(categories["Cc"])
    graph.difference_update(categories["Cs"])
    graph = sorted(digit)

    lower = set()
    lower.update(derived_properties["Lowercase"])
    lower = sorted(lower)

    print_ = set()
    print_.update(range(0, 0xD800))
    print_.update(range(0xE000, 0x110000))
    print_.difference_update(contributory_properties["White_Space"])
    print_.difference_update(categories["Cc"])
    print_.difference_update(categories["Cs"])
    print_.update(categories["Zs"])
    print_.update(name_alias["CHARACTER TABULATION"])
    print_.difference_update(categories["Cc"])
    print_ = sorted(print_)

    punct = set()
    punct.update(categories["P"])
    punct = sorted(punct)

    space = set()
    space.update(contributory_properties["White_Space"])
    space = sorted(space)

    upper = set()
    upper.update(derived_properties["Uppercase"])
    upper = sorted(upper)

    word = set()
    word.update(derived_properties["Alphabetic"])
    word.update(categories["M"])
    word.update(categories["Nd"])
    word.update(categories["Pc"])
    word.update(contributory_properties["Join_Control"])
    word = sorted(word)

    xdigit = set()
    xdigit.update(categories["Nd"])
    xdigit.update(contributory_properties["Hex_Digit"])
    xdigit = sorted(xdigit)

    print("//! Generated by:")
    print("//! generate_compatibility_properties.py <ucd_dir>")
    print()
    print("use crate::Range;")
    print()

    first = True
    for name, code_points in [
        ("ALNUM", alnum),
        ("ALPHA", alpha),
        ("BLANK", blank),
        ("CNTRL", cntrl),
        ("DIGIT", digit),
        ("GRAPH", graph),
        ("LOWER", lower),
        ("PRINT", print_),
        ("PUNCT", punct),
        ("SPACE", space),
        ("UPPER", upper),
        ("WORD", word),
        ("XDIGIT", xdigit),
    ]:
        if not first:
            print()
        print_table(name, code_points)
        first = False

if __name__ == '__main__':
    main()