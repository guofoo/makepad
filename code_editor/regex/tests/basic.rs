//! Generated by:
//! generate_fowler_tests.py <filename>

mod macros;

use crate::macros::test_regex;

test_regex!(basic_1, r#"abracadabra$"#, "abracadabracadabra", [Some(7), Some(18)]);
test_regex!(basic_2, r#"a...b"#, "", []);
test_regex!(basic_3, r#"XXXXXX"#, "", []);
test_regex!(basic_4, r#"\)"#, "", []);
test_regex!(basic_5, r#"a]"#, "", []);
test_regex!(basic_6, r#"\}"#, "", []);
test_regex!(basic_7, r#"\]"#, "", []);
test_regex!(basic_8, r#"]"#, "", []);
test_regex!(basic_9, r#"^a"#, "", []);
test_regex!(basic_10, r#"\^a"#, "", []);
test_regex!(basic_11, r#"a\^"#, "", []);
test_regex!(basic_12, r#"a$"#, "", []);
test_regex!(basic_13, r#"a\$"#, "", []);
test_regex!(basic_14, r#"^$"#, "", []);
test_regex!(basic_15, r#"$^"#, "", []);
test_regex!(basic_16, r#"a($)"#, "", []);
test_regex!(basic_17, r#"a*(^a)"#, "", []);
test_regex!(basic_18, r#"(..)*(...)*"#, "", []);
test_regex!(basic_19, r#"(..)*(...)*"#, "", []);
test_regex!(basic_20, r#"(ab|a)(bc|c)"#, "", []);
test_regex!(basic_21, r#"(ab)c|abc"#, "", []);
test_regex!(basic_22, r#"a{0}b"#, "", []);
test_regex!(basic_23, r#"(a*)(b?)(b+)b{3}"#, "aaabbbbbbb", [Some(0), Some(10), Some(0), Some(3), Some(3), Some(4), Some(4), Some(7)]);
test_regex!(basic_24, r#"(a*)(b{0,1})(b{1,})b{3}"#, "aaabbbbbbb", [Some(0), Some(10), Some(0), Some(3), Some(3), Some(4), Some(4), Some(7)]);
test_regex!(basic_25, r#"a{9876543210}"#, "NULL", []);
test_regex!(basic_26, r#"((a|a)|a)"#, "", []);
test_regex!(basic_27, r#"(a*)(a|aa)"#, "", []);
test_regex!(basic_28, r#"a*(a.|aa)"#, "", []);
test_regex!(basic_29, r#"a(b)|c(d)|a(e)f"#, "", []);
test_regex!(basic_30, r#"(a|b)?.*"#, "", []);
test_regex!(basic_31, r#"(a|b)c|a(b|c)"#, "", []);
test_regex!(basic_32, r#"(a|b)c|a(b|c)"#, "", []);
test_regex!(basic_33, r#"(a|b)*c|(a|ab)*c"#, "", []);
test_regex!(basic_34, r#"(a|b)*c|(a|ab)*c"#, "", []);
test_regex!(basic_35, r#"(.a|.b).*|.*(.a|.b)"#, "", []);
test_regex!(basic_36, r#"a?(ab|ba)ab"#, "", []);
test_regex!(basic_37, r#"a?(ac{0}b|ba)ab"#, "", []);
test_regex!(basic_38, r#"ab|abab"#, "", []);
test_regex!(basic_39, r#"aba|bab|bba"#, "", []);
test_regex!(basic_40, r#"aba|bab"#, "", []);
test_regex!(basic_41, r#"(aa|aaa)*|(a|aaaaa)"#, "", []);
test_regex!(basic_42, r#"(a.|.a.)*|(a|.a...)"#, "", []);
test_regex!(basic_43, r#"ab|a"#, "", []);
test_regex!(basic_44, r#"ab|a"#, "", []);
test_regex!(basic_45, r#"(?-u)(Ab|cD)*"#, "", []);
test_regex!(basic_46, r#"[^-]"#, "", []);
test_regex!(basic_47, r#"[a-]*"#, "", []);
test_regex!(basic_48, r#"[a-m-]*"#, "", []);
test_regex!(basic_49, r#":::1:::0:|:::1:1:0:"#, ":::0:::1:::1:::0:", [Some(8), Some(17)]);
test_regex!(basic_50, r#":::1:::0:|:::1:1:1:"#, ":::0:::1:::1:::0:", [Some(8), Some(17)]);
test_regex!(basic_51, r#"[[:upper:]]"#, "", []);
test_regex!(basic_52, r#"[[:lower:]]+"#, "", []);
test_regex!(basic_53, r#"[[:upper:]]+"#, "", []);
test_regex!(basic_54, r#"\n"#, "", []);
test_regex!(basic_55, r#"\n"#, "", []);
test_regex!(basic_56, r#"[^a]"#, "", []);
test_regex!(basic_57, r#"\na"#, "", []);
test_regex!(basic_58, r#"(a)(b)(c)"#, "abc", [Some(0), Some(3), Some(0), Some(1), Some(1), Some(2), Some(2), Some(3)]);
test_regex!(basic_59, r#"xxx"#, "", []);
test_regex!(basic_60, r#"(^|[ (,;])((([Ff]eb[^ ]* *|0*2/|\* */?)0*[6-7]))([^0-9]|$)"#, "feb 6,", [Some(0), Some(6)]);
test_regex!(basic_61, r#"(^|[ (,;])((([Ff]eb[^ ]* *|0*2/|\* */?)0*[6-7]))([^0-9]|$)"#, "2/7", [Some(0), Some(3)]);
test_regex!(basic_62, r#"(^|[ (,;])((([Ff]eb[^ ]* *|0*2/|\* */?)0*[6-7]))([^0-9]|$)"#, "feb 1,Feb 6", [Some(5), Some(11)]);
test_regex!(basic_63, r#"((((((((((((((((((((((((((((((x))))))))))))))))))))))))))))))"#, "x", [Some(0), Some(1), Some(0), Some(1), Some(0), Some(1)]);
test_regex!(basic_64, r#"((((((((((((((((((((((((((((((x))))))))))))))))))))))))))))))*"#, "xx", [Some(0), Some(2), Some(1), Some(2), Some(1), Some(2)]);
test_regex!(basic_65, r#"a?(ab|ba)*"#, "ababababababababababababababababababababababababababababababababababababababababa", [Some(0), Some(81), Some(79), Some(81)]);
test_regex!(basic_66, r#"abaa|abbaa|abbbaa|abbbbaa"#, "ababbabbbabbbabbbbabbbbaa", [Some(18), Some(25)]);
test_regex!(basic_67, r#"abaa|abbaa|abbbaa|abbbbaa"#, "ababbabbbabbbabbbbabaa", [Some(18), Some(22)]);
test_regex!(basic_68, r#"aaac|aabc|abac|abbc|baac|babc|bbac|bbbc"#, "baaabbbabac", [Some(7), Some(11)]);
test_regex!(basic_69, r#".*"#, "", []);
test_regex!(basic_70, r#"aaaa|bbbb|cccc|ddddd|eeeeee|fffffff|gggg|hhhh|iiiii|jjjjj|kkkkk|llll"#, "", []);
test_regex!(basic_71, r#"a*a*a*a*a*b"#, "", []);
test_regex!(basic_72, r#"^"#, "", []);
test_regex!(basic_73, r#"$"#, "", []);
test_regex!(basic_74, r#"^$"#, "", []);
test_regex!(basic_75, r#"^a$"#, "", []);
test_regex!(basic_76, r#"abc"#, "", []);
test_regex!(basic_77, r#"abc"#, "", []);
test_regex!(basic_78, r#"abc"#, "", []);
test_regex!(basic_79, r#"ab*c"#, "", []);
test_regex!(basic_80, r#"ab*bc"#, "", []);
test_regex!(basic_81, r#"ab*bc"#, "", []);
test_regex!(basic_82, r#"ab*bc"#, "", []);
test_regex!(basic_83, r#"ab+bc"#, "", []);
test_regex!(basic_84, r#"ab+bc"#, "", []);
test_regex!(basic_85, r#"ab?bc"#, "", []);
test_regex!(basic_86, r#"ab?bc"#, "", []);
test_regex!(basic_87, r#"ab?c"#, "", []);
test_regex!(basic_88, r#"^abc$"#, "", []);
test_regex!(basic_89, r#"^abc"#, "", []);
test_regex!(basic_90, r#"abc$"#, "", []);
test_regex!(basic_91, r#"^"#, "", []);
test_regex!(basic_92, r#"$"#, "", []);
test_regex!(basic_93, r#"a.c"#, "", []);
test_regex!(basic_94, r#"a.c"#, "", []);
test_regex!(basic_95, r#"a.*c"#, "", []);
test_regex!(basic_96, r#"a[bc]d"#, "", []);
test_regex!(basic_97, r#"a[b-d]e"#, "", []);
test_regex!(basic_98, r#"a[b-d]"#, "", []);
test_regex!(basic_99, r#"a[-b]"#, "", []);
test_regex!(basic_100, r#"a[b-]"#, "", []);
test_regex!(basic_101, r#"a]"#, "", []);
test_regex!(basic_102, r#"a[]]b"#, "", []);
test_regex!(basic_103, r#"a[^bc]d"#, "", []);
test_regex!(basic_104, r#"a[^-b]c"#, "", []);
test_regex!(basic_105, r#"a[^]b]c"#, "", []);
test_regex!(basic_106, r#"ab|cd"#, "", []);
test_regex!(basic_107, r#"ab|cd"#, "", []);
test_regex!(basic_108, r#"a\(b"#, "", []);
test_regex!(basic_109, r#"a\(*b"#, "", []);
test_regex!(basic_110, r#"a\(*b"#, "", []);
test_regex!(basic_111, r#"((a))"#, "", []);
test_regex!(basic_112, r#"(a)b(c)"#, "", []);
test_regex!(basic_113, r#"a+b+c"#, "", []);
test_regex!(basic_114, r#"a*"#, "", []);
test_regex!(basic_115, r#"(a*)*"#, "", []);
test_regex!(basic_116, r#"(a*)+"#, "", []);
test_regex!(basic_117, r#"(a*|b)*"#, "", []);
test_regex!(basic_118, r#"(a+|b)*"#, "", []);
test_regex!(basic_119, r#"(a+|b)+"#, "", []);
test_regex!(basic_120, r#"(a+|b)?"#, "", []);
test_regex!(basic_121, r#"[^ab]*"#, "", []);
test_regex!(basic_122, r#"(^)*"#, "", []);
test_regex!(basic_123, r#"a*"#, "", []);
test_regex!(basic_124, r#"([abc])*d"#, "", []);
test_regex!(basic_125, r#"([abc])*bcd"#, "", []);
test_regex!(basic_126, r#"a|b|c|d|e"#, "", []);
test_regex!(basic_127, r#"(a|b|c|d|e)f"#, "", []);
test_regex!(basic_128, r#"((a*|b))*"#, "", []);
test_regex!(basic_129, r#"abcd*efg"#, "", []);
test_regex!(basic_130, r#"ab*"#, "", []);
test_regex!(basic_131, r#"ab*"#, "", []);
test_regex!(basic_132, r#"(ab|cd)e"#, "", []);
test_regex!(basic_133, r#"[abhgefdc]ij"#, "", []);
test_regex!(basic_134, r#"(a|b)c*d"#, "", []);
test_regex!(basic_135, r#"(ab|ab*)bc"#, "", []);
test_regex!(basic_136, r#"a([bc]*)c*"#, "", []);
test_regex!(basic_137, r#"a([bc]*)(c*d)"#, "", []);
test_regex!(basic_138, r#"a([bc]+)(c*d)"#, "", []);
test_regex!(basic_139, r#"a([bc]*)(c+d)"#, "", []);
test_regex!(basic_140, r#"a[bcd]*dcdcde"#, "", []);
test_regex!(basic_141, r#"(ab|a)b*c"#, "", []);
test_regex!(basic_142, r#"((a)(b)c)(d)"#, "", []);
test_regex!(basic_143, r#"[A-Za-z_][A-Za-z0-9_]*"#, "alpha", []);
test_regex!(basic_144, r#"^a(bc+|b[eh])g|.h$"#, "abh", []);
test_regex!(basic_145, r#"(bc+d$|ef*g.|h?i(j|k))"#, "effgz", []);
test_regex!(basic_146, r#"(bc+d$|ef*g.|h?i(j|k))"#, "ij", []);
test_regex!(basic_147, r#"(bc+d$|ef*g.|h?i(j|k))"#, "reffgz", []);
test_regex!(basic_148, r#"(((((((((a)))))))))"#, "a", []);
test_regex!(basic_149, r#"multiple words"#, "", []);
test_regex!(basic_150, r#"(.*)c(.*)"#, "", []);
test_regex!(basic_151, r#"abcd"#, "", []);
test_regex!(basic_152, r#"a(bc)d"#, "", []);
test_regex!(basic_153, r#"a[-]?c"#, "", []);
test_regex!(basic_154, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Qaddafi", [Some(0), Some(15), None, None, Some(10), Some(12)]);
test_regex!(basic_155, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Mo'ammar Gadhafi", [Some(0), Some(16), None, None, Some(11), Some(13)]);
test_regex!(basic_156, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Kaddafi", [Some(0), Some(15), None, None, Some(10), Some(12)]);
test_regex!(basic_157, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Qadhafi", [Some(0), Some(15), None, None, Some(10), Some(12)]);
test_regex!(basic_158, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Gadafi", [Some(0), Some(14), None, None, Some(10), Some(11)]);
test_regex!(basic_159, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Mu'ammar Qadafi", [Some(0), Some(15), None, None, Some(11), Some(12)]);
test_regex!(basic_160, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Moamar Gaddafi", [Some(0), Some(14), None, None, Some(9), Some(11)]);
test_regex!(basic_161, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Mu'ammar Qadhdhafi", [Some(0), Some(18), None, None, Some(13), Some(15)]);
test_regex!(basic_162, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Khaddafi", [Some(0), Some(16), None, None, Some(11), Some(13)]);
test_regex!(basic_163, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Ghaddafy", [Some(0), Some(16), None, None, Some(11), Some(13)]);
test_regex!(basic_164, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Ghadafi", [Some(0), Some(15), None, None, Some(11), Some(12)]);
test_regex!(basic_165, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Ghaddafi", [Some(0), Some(16), None, None, Some(11), Some(13)]);
test_regex!(basic_166, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muamar Kaddafi", [Some(0), Some(14), None, None, Some(9), Some(11)]);
test_regex!(basic_167, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Quathafi", [Some(0), Some(16), None, None, Some(11), Some(13)]);
test_regex!(basic_168, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Muammar Gheddafi", [Some(0), Some(16), None, None, Some(11), Some(13)]);
test_regex!(basic_169, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Moammar Khadafy", [Some(0), Some(15), None, None, Some(11), Some(12)]);
test_regex!(basic_170, r#"M[ou]'?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]"#, "Moammar Qudhafi", [Some(0), Some(15), None, None, Some(10), Some(12)]);
test_regex!(basic_171, r#"a+(b|c)*d+"#, "", []);
test_regex!(basic_172, r#"^.+$"#, "", []);
test_regex!(basic_173, r#"^(.+)$"#, "", []);
test_regex!(basic_174, r#"^([^!.]+).att.com!(.+)$"#, "gryphon.att.com!eby", [Some(0), Some(19), Some(0), Some(7), Some(16), Some(19)]);
test_regex!(basic_175, r#"^([^!]+!)?([^!]+)$"#, "bas", []);
test_regex!(basic_176, r#"^([^!]+!)?([^!]+)$"#, "bar!bas", []);
test_regex!(basic_177, r#"^([^!]+!)?([^!]+)$"#, "foo!bas", []);
test_regex!(basic_178, r#"^.+!([^!]+!)([^!]+)$"#, "foo!bar!bas", []);
test_regex!(basic_179, r#"((foo)|(bar))!bas"#, "bar!bas", []);
test_regex!(basic_180, r#"((foo)|(bar))!bas"#, "foo!bar!bas", []);
test_regex!(basic_181, r#"((foo)|(bar))!bas"#, "foo!bas", []);
test_regex!(basic_182, r#"((foo)|bar)!bas"#, "", []);
test_regex!(basic_183, r#"((foo)|bar)!bas"#, "", []);
test_regex!(basic_184, r#"((foo)|bar)!bas"#, "", []);
test_regex!(basic_185, r#"(foo|(bar))!bas"#, "", []);
test_regex!(basic_186, r#"(foo|(bar))!bas"#, "", []);
test_regex!(basic_187, r#"(foo|(bar))!bas"#, "", []);
test_regex!(basic_188, r#"(foo|bar)!bas"#, "", []);
test_regex!(basic_189, r#"(foo|bar)!bas"#, "", []);
test_regex!(basic_190, r#"(foo|bar)!bas"#, "", []);
test_regex!(basic_191, r#"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$"#, "foo!bar!bas", [Some(0), Some(11), Some(0), Some(11), None, None, None, None, Some(4), Some(8), Some(8), Some(11)]);
test_regex!(basic_192, r#"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$"#, "bas", []);
test_regex!(basic_193, r#"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$"#, "bar!bas", []);
test_regex!(basic_194, r#"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$"#, "foo!bar!bas", [Some(0), Some(11), None, None, None, None, Some(4), Some(8), Some(8), Some(11)]);
test_regex!(basic_195, r#"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$"#, "foo!bas", []);
test_regex!(basic_196, r#"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$"#, "bas", []);
test_regex!(basic_197, r#"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$"#, "bar!bas", []);
test_regex!(basic_198, r#"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$"#, "foo!bar!bas", [Some(0), Some(11), Some(0), Some(11), None, None, None, None, Some(4), Some(8), Some(8), Some(11)]);
test_regex!(basic_199, r#"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$"#, "foo!bas", []);
test_regex!(basic_200, r#".*(/XXX).*"#, "", []);
test_regex!(basic_201, r#".*(\\XXX).*"#, "", []);
test_regex!(basic_202, r#"\\XXX"#, "", []);
test_regex!(basic_203, r#".*(/000).*"#, "", []);
test_regex!(basic_204, r#".*(\\000).*"#, "", []);
test_regex!(basic_205, r#"\\000"#, "", []);
